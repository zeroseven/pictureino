var __defProp=Object.defineProperty,__defNormalProp=(e,t,i)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,__publicField=(e,t,i)=>__defNormalProp(e,"symbol"!=typeof t?t+"":t,i);let PREDEFINED_RATIOS=[[1,1],[16,9],[5,4],[4,3]],parseRatio=e=>{var t;return e&&"1:1"!==e?([e,t]=e.split(":").map(Number),{width:e,height:t,isPortrait:e<t}):{width:1,height:1,isPortrait:!1}},formatRatio=({width:e,height:t,isPortrait:i})=>1===e&&1===t?"1:1":i?t+":"+e:e+":"+t,parseBreakpoints=e=>{if(Array.isArray(e))return e;if(null!=e&&e.trim())try{var t=JSON.parse(e);if(Array.isArray(t))return t;if("object"==typeof t&&null!==t)return Object.values(t)}catch{return e.split(",").map(e=>e.trim()).filter(Boolean)}return[]};class RatioSelector{constructor(e,t){__publicField(this,"element"),__publicField(this,"ratio"),__publicField(this,"onChange"),this.element=document.createElement("select"),this.element.required=!0,this.element.className="form-select form-control",this.ratio=parseRatio(e)||{width:0,height:0,isPortrait:!1},this.onChange=t,this.initializeSelect(),this.setValue(e)}initializeSelect(){var e=this.generateOptions();this.element.innerHTML=e.map(e=>`<option value="${e.value}">${e.text}</option>`).join(""),this.element.addEventListener("change",()=>{this.ratio=parseRatio(this.element.value)||this.ratio,this.onChange()})}generateOptions(){return[{value:"",text:"Select ratio"},...PREDEFINED_RATIOS.map(([e,t])=>{e={width:e,height:t,isPortrait:this.ratio.isPortrait},t=formatRatio(e);return{value:t,text:t}})]}getElement(){return this.element}getValue(){return formatRatio(this.ratio)}toggleOrientation(){var e,t;1===this.ratio.width&&1===this.ratio.height||(e=this.getValue(),this.ratio={...this.ratio,isPortrait:!this.ratio.isPortrait},t=this.generateOptions(),this.element.innerHTML=t.map(e=>`<option value="${e.value}">${e.text}</option>`).join(""),t=formatRatio(this.ratio),this.setValue(t),e!==t&&this.onChange())}setValue(e){this.element.value=e}}class BreakpointControl{constructor(e,t,i,a,r){__publicField(this,"element"),__publicField(this,"breakpoint"),__publicField(this,"ratioSelector"),this.breakpoint=e,this.ratioSelector=new RatioSelector(t,r),this.element=this.createControl(i,a)}createControl(e,t){var i=document.createElement("div"),e=(i.className="aspectratio__breakpoint",i.dataset.breakpoint=this.breakpoint,i.style.order=String(e),`
      <span class="aspectratio__breakpoint-label">${this.breakpoint}</span>
      <span class="aspectratio__select"></span>
      <button type="button" class="aspectratio__breakpoint-remove btn btn-default">×</button>
      <button type="button" class="aspectratio__switch btn btn-default">⟷</button>
    `);return i.innerHTML=e,null!=(e=i.querySelector(".aspectratio__select"))&&e.appendChild(this.ratioSelector.getElement()),null!=(e=i.querySelector(".aspectratio__breakpoint-remove"))&&e.addEventListener("click",t),null!=(e=i.querySelector(".aspectratio__switch"))&&e.addEventListener("click",()=>this.ratioSelector.toggleOrientation()),i}getElement(){return this.element}getRatio(){return this.ratioSelector.getValue()}}class BreakpointManager{constructor(e){__publicField(this,"element"),__publicField(this,"availableBreakpoints"),__publicField(this,"usedBreakpoints"),this.element=document.createElement("select"),this.element.className="aspectratio__breakpoint-select form-select form-control",this.availableBreakpoints=new Set(e),this.usedBreakpoints=new Set,this.updateOptions()}getElement(){return this.element}markBreakpointAsUsed(e){this.availableBreakpoints.has(e)&&(this.usedBreakpoints.add(e),this.updateOptions())}async waitForSelection(){return new Promise(t=>{let i=()=>{var e=this.element.value;e&&(this.element.removeEventListener("change",i),this.element.value="",this.usedBreakpoints.add(e),this.updateOptions(),t(e))};this.element.addEventListener("change",i)})}removeBreakpoint(e){this.usedBreakpoints.delete(e),this.updateOptions()}updateOptions(){var e=Array.from(this.availableBreakpoints).filter(e=>!this.usedBreakpoints.has(e));this.element.innerHTML=`
      <option value="">Add aspect ratio</option>
      ${e.map(e=>`<option value="${e}">${e}</option>`).join("")}
    `,this.element.disabled=0===e.length}}class AspectRatio{constructor(e,t,i,a){__publicField(this,"wrapper"),__publicField(this,"hiddenField"),__publicField(this,"breakpointsList"),__publicField(this,"breakpointManager"),__publicField(this,"breakpoints",new Map),__publicField(this,"orderedBreakpoints");t=document.getElementById(t),e=document.getElementById(e);if(!t||!e)throw new Error("Required elements not found");this.wrapper=t,this.hiddenField=e,this.orderedBreakpoints=parseBreakpoints(a),this.breakpointManager=new BreakpointManager(this.orderedBreakpoints),this.breakpointsList=document.createElement("div"),this.breakpointsList.className="aspectratio__breakpoint-list",this.initialize(i)}initialize(e){if(this.wrapper.className="aspectratio",this.wrapper.append(this.breakpointManager.getElement(),this.breakpointsList),null!=e&&e.trim()&&e.startsWith("{"))try{var t=JSON.parse(e);Object.entries(t).forEach(([e,t])=>{this.addBreakpoint(e,t),this.breakpointManager.markBreakpointAsUsed(e)})}catch(e){console.error("Failed to parse saved aspect ratios:",e)}this.listenForBreakpoints()}async listenForBreakpoints(){for(;;){var e=await this.breakpointManager.waitForSelection();this.addBreakpoint(e)}}addBreakpoint(e,t=""){var i=this.orderedBreakpoints.indexOf(e),t=new BreakpointControl(e,t,i,()=>this.removeBreakpoint(e),()=>this.updateHiddenField());this.breakpoints.set(e,t),this.breakpointsList.appendChild(t.getElement()),this.updateHiddenField()}removeBreakpoint(e){var t=this.breakpoints.get(e);t&&(t.getElement().remove(),this.breakpoints.delete(e),this.breakpointManager.removeBreakpoint(e),this.updateHiddenField())}updateHiddenField(){var e=Array.from(this.breakpoints.entries()).reduce((e,[t,i])=>(e[t]=i.getRatio(),e),{});this.hiddenField.value=JSON.stringify(e)}}export{AspectRatio as default};