var __defProp=Object.defineProperty,__defNormalProp=(e,t,i)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,__publicField=(e,t,i)=>__defNormalProp(e,"symbol"!=typeof t?t+"":t,i);class ApiService{static async fetchImageUrl(e,t,i){t=await fetch(`/-/img/${t}x${i}/${e}/`);if(t.ok)return t.json();throw new Error("HTTP error! status: "+t.status)}static async getOptimizedImage(e,t,i){try{return await this.fetchImageUrl(e,t,i)}catch(e){throw console.error("Failed to fetch optimized image:",e),e}}}class ViewportService{static isInViewport(e){var e=e.getBoundingClientRect(),t=window.innerHeight||document.documentElement.clientHeight,i=window.innerWidth||document.documentElement.clientWidth;return e.top<=t+100&&-100<=e.bottom&&e.left<=i+100&&-100<=e.right}static whenInViewport(e){return new Promise(i=>{if(this.isInViewport(e))i();else{let t=new IntersectionObserver(e=>{e[0].isIntersecting&&(t.disconnect(),i())},{rootMargin:"100px"});t.observe(e)}})}}class ImageHandler{static async preloadImage(r){return new Promise((e,t)=>{var i=new Image;i.onload=()=>e(),i.onerror=()=>t(new Error("Failed to load image: "+r)),i.src=r})}static updateImageSource(e,t){e instanceof HTMLSourceElement?e.srcset=t.attributes.src:e.src=t.attributes.src,e.width=t.attributes.width,e.height=t.attributes.height}static findTargetElement(e){var t=e.closest("picture");return t&&Array.from(t.getElementsByTagName("source"))[0]||e}static async processImage(e){try{await ViewportService.whenInViewport(e.element);var t,i,r=Math.round(e.element.offsetWidth),n=Math.round(e.element.offsetHeight);0!==r&&0!==n&&(t=await ApiService.getOptimizedImage(e.config,r,n),await this.preloadImage(t.attributes.src),document.body.contains(e.element))&&(i=this.findTargetElement(e.element),this.updateImageSource(i,t))}catch(e){console.error("Failed to process image:",e)}}}class Picturerino{static handleResize(){this.resizeDebounceTimeout&&window.clearTimeout(this.resizeDebounceTimeout),this.resizeDebounceTimeout=window.setTimeout(()=>{this.images.forEach(e=>{document.body.contains(e.element)?ImageHandler.processImage(e):this.images.delete(e.element)})},250)}static init(){this.isInitialized||(window.addEventListener("resize",()=>this.handleResize()),this.isInitialized=!0)}static handle(e){e.removeAttribute("onload"),e.removeAttribute("srcset"),this.isInitialized||this.init();var t=e.getAttribute("data-config");t?(this.images.set(e,e={element:e,config:t}),ImageHandler.processImage(e)):console.error("No data-config attribute found on image element")}}__publicField(Picturerino,"images",new Map),__publicField(Picturerino,"resizeDebounceTimeout",null),__publicField(Picturerino,"isInitialized",!1),document.addEventListener("DOMContentLoaded",()=>{Picturerino.init()}),window.Picturerino=Picturerino;